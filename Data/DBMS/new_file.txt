sqlplus64
CSE1065/academy@192.168.18.6:1521/ORCL

1. select concat(cust_first_name, concat(' ',cust_last_name)) as customer_name from new_customer;
2. select count(*) as TOTAL_MARRIED from new_customer where MARITORIAL_STATUS='Married';
3. select count(*) as TOTAL_FEMALES from new_customer where SEX='F';
4. select count(TERRITORY) as TERRITORIES from new_customer;
5. select count(distinct TERRITORY) as TERRITORIES from new_customer;
6. select * from new_customer order by territory;
7. select * from customer where mgr_id=(select cust_id from customer where cust_first_name='Ishwarya' and cust_last_name='Roberts') and cust_first_name<>'Ishwarya';


Q---> Find all the customer live in Rob Russell's territory..
A---> select concat(concat(Cust_first_name, ' '), cust_last_name) as customer_name from customer where territory=(select territory from customer where concat(cust_first_name, cust_last_name)='RobRussell'); OR
	  select concat(concat(c.cust_first_name, ' '), c.cust_last_name) from customer c, customer m where c.territory=m.territory and concat(m.cust_first_name,m.cust_last_name)='RobRussell';
	***add "and concat(c.cust_first_name,c.cust_last_name)='RobRussell'" if we don't want Rob Russell himself.***


8. select concat(concat(c.Cust_first_name, ' '), c.cust_last_name) as customer_name from customer c, customer m where m.cust_id=c.mgr_id and concat(m.cust_first_name,m.cust_last_name)='IshwaryaRoberts' and c.gender='F';

9. select concat(concat(c.Cust_first_name, ' '), c.cust_last_name) as customer_name from customer c, customer m where m.cust_id=c.mgr_id and concat(m.cust_first_name,m.cust_last_name)='IshwaryaRoberts' and c.Maritorial_status='Married';

10. select concat(concat(c.Cust_first_name, ' '), c.cust_last_name) as customer_name from customer c, customer m where m.cust_id=c.mgr_id and concat(m.cust_first_name,m.cust_last_name)='IshwaryaRoberts' and c.Maritorial_status='Married' and extract(year from sysdate) - extract(year from c.dob)<50;

select concat(concat(c.Cust_first_name, ' '), c.cust_last_name) as customer_name from customer c, customer m where m.cust_id=c.mgr_id and concat(m.cust_first_name,m.cust_last_name)='IshwaryaRoberts' and c.Maritorial_status='Married' and ((sysdate-c.dob)/365)<50;







Day 5:
-----------------------------------------------------------------------------------------------------
create table dept(dept_id number(3) primary key, dept_name varchar2(15));
insert into dept values('&dept_id', '&dept_name');

create table cust_10(
	emp_id number(3) primary key,
	first_name varchar2(10) check(first_name=initcap(first_name)),
	last_name varchar2(10) check(last_name=initcap(last_name)) not null,
	e_mail varchar2(20) check(e_mail=upper(e_mail)),
	ph_no varchar2(15),
	hire_date date check(hire_date>'01-JAN-1980'),
	job_id varchar2(10) check(job_id like 'AD%' or job_id like 'FI%' or job_id like 'IT%'),
	salary number(8,2) check(salary between 4000 and 25000),
	mgr_id number(3),
	dept_id number(3) references Dept(dept_id)
);

1. insert into cust_100 values('&emp_id', '&firstname', '&lastname', '&Email', '&ph_no', '&hire_date', '&job_id', '&salary', '&Mgr_id', '&dept_id');

4. SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, SEARCH_CONDITION FROM USER_CONSTRAINTS WHERE TABLE_NAME='CUST_100';







Day6:
-----------------------------------------------------------------------------------------------------
create table sailor(
	sid varchar2(4),
	sname varchar2(15),
	mname varchar2(15),
	Surname varchar2(15),
	Rating number(2),
	Age number(3,1)
); 

alter table sailor add constraint sailor_pk primary key(sid);
alter table sailor add constraint sailor_start check(sid like 's%'); 
alter table sailor add constraint name_initcap check(sname=initcap(sname));

INSERT INTO SAILOR VALUES('&SID', '&SNAME', '&MNAME', '&SURNAME', '&RATING', '&AGE');




create table boat(
	bid number(3),
	bname varchar2(10),
	color varchar2(6)
);

alter table boat add constraint boat_pk primary key(bid);
alter table boat add constraint bn_low  check(bname=lower(bname));
alter table boat add constraint color_fxd check(color in ('red', 'green', 'blue'));

INSERT INTO BOAT VALUES('&BID', '&BNAME', '&COLOR');



create table reserve(
	sid varchar2(4),
	bid number(3),
	day date
);

ALTER TABLE RESERVE ADD CONSTRAINT SID_FK FOREIGN KEY(SID) REFERENCES SAILOR(SID);
ALTER TABLE RESERVE ADD CONSTRAINT BID_FK FOREIGN KEY(BID) REFERENCES BOAT(BID);
ALTER TABLE RESERVE ADD CONSTRAINT DATE_CK CHECK(DAY<'01-JAN-2000');
ALTER TABLE RESERVE ADD CONSTRAINT ALL_PK PRIMARY KEY(SID,BID);



INSERT INTO RESERVE VALUES('&SID', '&BID', '&R_DAY');




Day 7
-----------------------------------------------------------------------------------------------
1. select concat(concat(sname, ' '), concat(concat(mname, ' '), surname)) name, age from sailor;
2. select concat(concat(sname, ' '), concat(concat(mname, ' '), surname)) name_of_sailors, age+2 from sailor;
3. select concat(concat(sname, ' '), concat(concat(mname, ' '), surname)) name_of_sailors from sailor order by concat(concat(sname, ' '), concat(concat(mname, ' '), surname));
4. select concat(concat(sname, ' '), concat(concat(mname, ' '), surname)) sailor_name from sailor;
5. select distinct(sname) from sailor;
6. select distinct(sname), rating from sailor where rating>=5 and rating<=10;
7. select * from sailor order by rating, age desc;
8. select * from sailor where rating>7;
9. select * from sailor where sname='Horatio' and age=35.4;
10.select * from sailor where sname='Horatio' or age=35.4;
11.select concat(concat(sname, ' '), concat(concat(mname, ' '), surname)) sailor_reserve_boat_104 from sailor s NATURAL JOIN reserve r where  bid=104; 
12.select sid sailor_reserve_boat_RED from reserve r NATURAL JOIN boat b where color='red';
13.select * from sailor where sname like 'B%';
14.select * from sailor where concat(concat(sname, ' '), concat(concat(mname, ' '), surname)) like '%B%' or  concat(concat(sname, ' '), concat(concat(mname, ' '), surname)) like '%b%';
15.select concat(concat(sname, ' '), concat(concat(mname, ' '), surname)) sailor_with_mid_name from sailor where mname is not null;
16.select concat(concat(sname, ' '), surname) sailor_with_mid_name from sailor where mname is null;
17.select distinct(color) Lubber_boat_color from boat NATURAL JOIN reserve NATURAL JOIN sailor where sname='Lubber';
18.select distinct(concat(concat(sname, ' '), concat(concat(mname, ' '), surname))) sailor_with_boat from sailor s, reserve r where r.sid=s.sid; ORRR
   select sid from sailor where sid in(select sid from reserve); ORRR
   select sname from sailor where exits(select * from reserve where sailor.sid=resere.sid);

20.select distinct(s.sid), rating+1 incremented_rating from sailor s, reserve r1, reserve r2 where s.sid=r1.sid and s.sid=r2.sid and r1.bid<>r2.bid and r1.day=r2.day;
21.select sname from sailor where sname like 'B_%b';
22.select sname from sailor where sname like 'B_b';
23.select concat(concat(sname, ' '), concat(concat(mname, ' '), surname)) sailor_with_red_green_boat from sailor NATURAL JOIN reserve NATURAL JOIN boat where color='red' or color='green';
24.select sid, concat(concat(sname, ' '), concat(concat(mname, ' '), surname)) sailor_with_red_not_green_boat from sailor NATURAL JOIN reserve NATURAL JOIN boat where color='red' 
minus 
select sid, concat(concat(sname, ' '), concat(concat(mname, ' '), surname)) sailor_with_red_not_green_boat from sailor NATURAL JOIN reserve NATURAL JOIN boat where  color='green';

25.select concat(concat(sname, ' '), concat(concat(mname, ' '), surname)) sailor_with_boat_103 from sailor s, reserve r where s.sid=r.sid and bid=103;
26.select distinct(concat(concat(sname, ' '), concat(concat(mname, ' '), surname))) sailor_with_boat_RED from sailor NATURAL JOIN reserve NATURAL JOIN boat where color='red';
28.select distinct(concat(concat(sname, ' '), concat(concat(mname, ' '), surname))) sailor_with_boat_not_RED from sailor NATURAL JOIN reserve NATURAL JOIN boat
   minus
   select concat(concat(sname, ' '), concat(concat(mname, ' '), surname)) from sailor NATURAL JOIN reserve NATURAL JOIN boat where color='red';
29.select count(distinct(sname || ' ' || mname || ' ' || surname)) distinct_sailor from sailor;
30.
	a. select * from sailor where rating > some(select rating from sailor where sname='Horatio');
	b. select * from sailor where rating > all(select rating from sailor where sname='Horatio');
32.select * from sailor minus select * from sailor where sname='Lubber' or sname='Horatio';
33.select sname || ' ' || mname || ' ' || surname name from sailor where rating>any(7,8,9);
34.select sname || ' ' || mname || ' ' || surname name from sailor where rating>all(7,8,9);
35.select avg(age) from sailor where rating=10;
36.select sname || ' ' || mname || ' ' || surname age_sailor_greater_than_10 from sailor where age>(select max(age) from sailor where rating=10);
37.select rating,min(age) from sailor group by rating;
38.select rating, count(*) from sailor where age>17 group by rating;
89.select rating, min(age) from sailor where age>17 group by rating having count(*)>1;
40.select rating, avg(age) from sailor group by rating having count(*)>1;
41.select boat.bid, count(*) from reserve, boat where reserve.bid=boat.bid and color='red' group by boat.bid;
42.select * from sailor where rating=(select max(rating) from sailor);    OR
   select * from sailor where rating>=all(select rating from sailor);
44.select rating from sailor group by rating having avg(age)<=all(select avg(age) from sailor group by rating);
45.select * from sailor where not exists((select bid from boat) MINUS (select bid from reserve where sailor.sid=reserve.sid));




Day 9
-------------------------------------------------------------------------------------












Day 10
-------------------------------------------------------------------------------------
create table traveller(ID number(3), Name varchar2(20), location varchar2(20));
create table tour(Tour_Id varchar2(2), Tour_spot varchar2(10), fare number(10), type varchar2(10));
insert into traveller values('&Id','&name','&loc');
create sequence seq1 start with 108 increment by -1 maxvalue 108;
insert into traveller values(seq1.nextval, '&name', '&loc'); 

drop sequence seq1;
create sequence seq2 start with 1 increment by 1 minvalue 1;
insert into tour values('T'||seq2.nextval,'&tour_spot','&fare','&type');

select seq1.currval from dual;  -- to check current value

update tour set tour_id='&tourid' where tour_id='&tour_id';
update tour set type='Delux' where tour_id='T5';

1. create view tourview as  select tour_spot tour_spotname, fare fares from tour where type='Delux'; 
drop view tourview;

2. select tour_spot from tour where fare>8000 and type='Delux';
   select tour_spotname from tourview where fares>8000;

3. insert into tourview values('&tourspot','&fare');
   update tour set type='Delux' where type is null;
4.

5.

6. create view tour_type_num as select type tour_type, count(*) count from tour group by type;











Day 10:
------------------------------------------------------------------------------------Assignment 8:PLSQL
1.
declare
	m number(5,2);
	g varchar(1);

begin
	m:='&marks';
	if m>89 and m<=100	then g:='O';
	elsif m>79 and m<=89	then g:='E';
	elsif m>69 and m<=79	then g:='A';
	elsif m>39 and m<=69	then g:='B';
	else	g:='F';
	end if;
	dbms_output.put_line('grade is '|| g);
end;
/


2.
declare
	n number(10);
	curr number(10):=0;

begin
	n:='&number';
	loop
		dbms_output.put_line(curr);
		curr:=curr+2;
		exit when curr>n;
	end loop;
end;
/
	
3.
declare
	n number(10);
	fact number(10):=1;
begin
	n:='&number';
	for i in 1..n loop
		fact:=fact*i;
	end loop;
	dbms_output.put_line('The factorial is: '||fact);
end;
/

4.
declare 
	a number(10):=0;
	b number(10):=1;
	c number(10):=0;
	n number(10);
begin
	n:='&number';
	while (c<=n) loop
		dbms_output.put_line(c);
		a:=b;
		b:=c;
		c:=a+b;
	end loop;
end;
/

5.
declare
	r number(20);
begin
	for i in 1..5 loop
		r:=dbms_random.random;
		insert into random_num values(r);
	end loop;
end;
/





6.
declare 
	r number(2);
	a number(10,2);
	v number(15,2);
begin
	for r in 1..20 loop
		a:=4*3.142*r*r;
		v:=4/3*3.142*r*r*r;
		insert into sphere values(r,a,v);
	end loop;
end;
/

7.
declare
	r sailor%rowtype;
	s_id varchar2(4); 
begin
	s_id:='&sid';
	select * into r from sailor where sid=s_id;
	dbms_output.put_line('SID= '||r.SID);
	dbms_output.put_line('SNAME= '||r.SNAME);
	dbms_output.put_line('MNAME= '||r.MNAME);
	dbms_output.put_line('SURNAME= '||r.SURNAME);
	dbms_output.put_line('RATING= '||r.RATING);
	dbms_output.put_line('AGE= '||r.AGE);

end;
/

8.
declare
	n number(10);
	i number(10):=0;
begin
	n:='&number';
	while (i<=n) loop
		dbms_output.put_line('3 X '||i||' = '||(i*3));
		i:=i+1;
	end loop;
end;
/


9.
declare
	n number(10);
begin
	n:='&number';
	for i in 0..n loop
		dbms_output.put_line('5 X '||i||' = '||(i*5));
	end loop;
end;
/

10.
declare
	basic number(20,5);
begin
	basic:='&basic_pay';
	dbms_output.put_line('total= '||(0.5*basic+0.25*basic-0.12*basic));
end;
/

11.
declare 
	str varchar2(20);
	rev varchar2(20);
	l number(2);
begin
	str:='&string';
	l:= length(str);
	for i in 1..l loop
		rev:=substr(str,i,1)||rev;
	end loop;
	dbms_output.put_line('The reverse string is: '||rev);
end;
/


12.
declare
	y number(4);
	s number(1);
begin
	y:='&year';
	if y mod 400 = 0 then	s:=1;
	elsif y mod 100 = 0 then s:=0;
	elsif y mod 4 = 0 then s:=1;
	else s:=0;
	end if;
	if s = 1 then	dbms_output.put_line('It is a leap year.');
	else dbms_output.put_line('It is not a leap year.');
	end if;
end;
/

